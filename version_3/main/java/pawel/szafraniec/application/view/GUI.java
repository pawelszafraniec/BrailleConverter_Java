package pawel.szafraniec.application.view;

import java.util.Map;
import java.util.TreeMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import pawel.szafraniec.model.BrailleToTextModel;
import pawel.szafraniec.model.InvalidInputException;
import pawel.szafraniec.model.TextToBrailleModel;
import pawel.szafraniec.view.View;


/**
 * class implementing GUI of the program
 * 
 * @author Pawel Szafraniec
 * @version 3.0
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form ApplicationView
     */
    public GUI() {
        initComponents();

        //filling Braille Numberic Code pane
        int row = 0;
        TreeMap<String, String> sortedMap = new TreeMap<>(new BrailleToTextModel().getMap());
        for (Map.Entry<String, String> entry : sortedMap.entrySet()) {
            BrailleToNumbersTable.setValueAt(entry.getKey(), row, 0);
            BrailleToNumbersTable.setValueAt(entry.getValue(), row, 1);
            row++;
        }

        //model of historyTable
        DefaultTableModel table = (DefaultTableModel) historyTable.getModel();
        table.setRowCount(0);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel = new javax.swing.JPanel();
        tabbedPane = new javax.swing.JTabbedPane();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        inputFieldTextToBraille = new javax.swing.JTextField();
        convertTextToBrailleButton = new javax.swing.JButton();
        inputTextToBraille = new javax.swing.JLabel();
        outputTextToBraille = new javax.swing.JLabel();
        outputFieldTexToBraille = new javax.swing.JTextField();
        clearInputTextButton = new javax.swing.JButton();
        clearOutputTextButton = new javax.swing.JButton();
        convertTextToBrailleLabel = new javax.swing.JLabel();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        inputFieldBrailleToText = new javax.swing.JTextField();
        convertBrailleToTextButton = new javax.swing.JButton();
        inputBrailleToText = new javax.swing.JLabel();
        outputBraileToText = new javax.swing.JLabel();
        outputFieldBrailleToText = new javax.swing.JTextField();
        clearInputTextButton1 = new javax.swing.JButton();
        clearOutputTextButton2 = new javax.swing.JButton();
        convertBrailleToText1 = new javax.swing.JLabel();
        convertBrailleToText2 = new javax.swing.JLabel();
        convertBrailleToText3 = new javax.swing.JLabel();
        convertBrailleToText4 = new javax.swing.JLabel();
        ExitButton1 = new javax.swing.JButton();
        jLayeredPane4 = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        BrailleToNumbersTable = new javax.swing.JTable();
        jLayeredPane5 = new javax.swing.JLayeredPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        historyTable = new javax.swing.JTable();
        historyLabel = new javax.swing.JLabel();
        jMenuBar2 = new javax.swing.JMenuBar();
        menu = new javax.swing.JMenu();
        aboutMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Braille Converter"));

        inputFieldTextToBraille.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputFieldTextToBrailleActionPerformed(evt);
            }
        });

        convertTextToBrailleButton.setText("Convert");
        convertTextToBrailleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertTextToBrailleButtonActionPerformed(evt);
            }
        });

        inputTextToBraille.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 11)); // NOI18N
        inputTextToBraille.setText("Input text:");

        outputTextToBraille.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 11)); // NOI18N
        outputTextToBraille.setText("Output text:");

        outputFieldTexToBraille.setEditable(false);
        outputFieldTexToBraille.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputFieldTexToBrailleActionPerformed(evt);
            }
        });

        clearInputTextButton.setText("Clear");
        clearInputTextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearInputTextButtonActionPerformed(evt);
            }
        });

        clearOutputTextButton.setText("Clear");
        clearOutputTextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearOutputTextButtonActionPerformed(evt);
            }
        });

        convertTextToBrailleLabel.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 14)); // NOI18N
        convertTextToBrailleLabel.setText("Enter the message you want to convert to Braille");

        jLayeredPane1.setLayer(inputFieldTextToBraille, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(convertTextToBrailleButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(inputTextToBraille, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(outputTextToBraille, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(outputFieldTexToBraille, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(clearInputTextButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(clearOutputTextButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(convertTextToBrailleLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(inputFieldTextToBraille)
            .addComponent(outputFieldTexToBraille)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(inputTextToBraille)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addComponent(outputTextToBraille)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(convertTextToBrailleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(171, 171, 171)))
                        .addComponent(clearInputTextButton))))
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(158, 158, 158)
                .addComponent(convertTextToBrailleLabel)
                .addGap(0, 161, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(clearOutputTextButton))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(convertTextToBrailleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputTextToBraille)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputFieldTextToBraille, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(clearInputTextButton)
                        .addGap(46, 46, 46))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(convertTextToBrailleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)))
                .addComponent(outputTextToBraille)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(outputFieldTexToBraille, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clearOutputTextButton)
                .addGap(87, 87, 87))
        );

        tabbedPane.addTab("Convert text to Braille", jLayeredPane1);

        inputFieldBrailleToText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputFieldBrailleToTextActionPerformed(evt);
            }
        });

        convertBrailleToTextButton.setText("Convert");
        convertBrailleToTextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertBrailleToTextButtonActionPerformed(evt);
            }
        });

        inputBrailleToText.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 11)); // NOI18N
        inputBrailleToText.setText("Input text:");

        outputBraileToText.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 11)); // NOI18N
        outputBraileToText.setText("Output text:");

        outputFieldBrailleToText.setEditable(false);
        outputFieldBrailleToText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outputFieldBrailleToTextActionPerformed(evt);
            }
        });

        clearInputTextButton1.setText("Clear");
        clearInputTextButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearInputTextButton1ActionPerformed(evt);
            }
        });

        clearOutputTextButton2.setText("Clear");
        clearOutputTextButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearOutputTextButton2ActionPerformed(evt);
            }
        });

        convertBrailleToText1.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 14)); // NOI18N
        convertBrailleToText1.setText(" Enter the string using numbers presented in Braille Numeric code pane    ");
        convertBrailleToText1.setToolTipText("");

        convertBrailleToText2.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 14)); // NOI18N
        convertBrailleToText2.setText(" Each Braille symbol has corresponding numeric value ");

        convertBrailleToText3.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 14)); // NOI18N
        convertBrailleToText3.setText(" Separate each entered number with a whitespace.  ");

        convertBrailleToText4.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 14)); // NOI18N
        convertBrailleToText4.setText(" Exemplary input string: 10 11 12");

        jLayeredPane3.setLayer(inputFieldBrailleToText, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(convertBrailleToTextButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(inputBrailleToText, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(outputBraileToText, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(outputFieldBrailleToText, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(clearInputTextButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(clearOutputTextButton2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(convertBrailleToText1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(convertBrailleToText2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(convertBrailleToText3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(convertBrailleToText4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane3Layout = new javax.swing.GroupLayout(jLayeredPane3);
        jLayeredPane3.setLayout(jLayeredPane3Layout);
        jLayeredPane3Layout.setHorizontalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(outputFieldBrailleToText)
            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane3Layout.createSequentialGroup()
                        .addComponent(inputBrailleToText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(clearInputTextButton1))
                    .addGroup(jLayeredPane3Layout.createSequentialGroup()
                        .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                                .addComponent(outputBraileToText)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane3Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(convertBrailleToTextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(168, 168, 168)))
                        .addComponent(clearOutputTextButton2))))
            .addComponent(inputFieldBrailleToText)
            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane3Layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(convertBrailleToText1))
                    .addGroup(jLayeredPane3Layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(convertBrailleToText3))
                            .addComponent(convertBrailleToText2)))
                    .addGroup(jLayeredPane3Layout.createSequentialGroup()
                        .addGap(205, 205, 205)
                        .addComponent(convertBrailleToText4)))
                .addGap(0, 87, Short.MAX_VALUE))
        );
        jLayeredPane3Layout.setVerticalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(convertBrailleToText1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(convertBrailleToText2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(convertBrailleToText3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(convertBrailleToText4)
                .addGap(4, 4, 4)
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputBrailleToText)
                    .addComponent(clearInputTextButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputFieldBrailleToText, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane3Layout.createSequentialGroup()
                        .addComponent(convertBrailleToTextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(outputBraileToText))
                    .addComponent(clearOutputTextButton2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(outputFieldBrailleToText, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );

        ExitButton1.setText("Exit");
        ExitButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButton1ActionPerformed(evt);
            }
        });

        jLayeredPane2.setLayer(jLayeredPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(ExitButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addGap(0, 1, Short.MAX_VALUE)
                .addComponent(jLayeredPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ExitButton1)
                .addGap(255, 255, 255))
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLayeredPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ExitButton1))
        );

        tabbedPane.addTab("Convert Braille to text", jLayeredPane2);

        BrailleToNumbersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Numeric value", "Braille symbol"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(BrailleToNumbersTable);

        jLayeredPane4.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane4Layout = new javax.swing.GroupLayout(jLayeredPane4);
        jLayeredPane4.setLayout(jLayeredPane4Layout);
        jLayeredPane4Layout.setHorizontalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 617, Short.MAX_VALUE)
        );
        jLayeredPane4Layout.setVerticalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
        );

        tabbedPane.addTab("Braille Numeric code", jLayeredPane4);

        historyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Conversion Type", "Input", "Output"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(historyTable);

        historyLabel.setFont(new java.awt.Font("Microsoft New Tai Lue", 0, 14)); // NOI18N
        historyLabel.setText("History of performed operations since the program was launched");

        jLayeredPane5.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(historyLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane5Layout = new javax.swing.GroupLayout(jLayeredPane5);
        jLayeredPane5.setLayout(jLayeredPane5Layout);
        jLayeredPane5Layout.setHorizontalGroup(
            jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane5Layout.createSequentialGroup()
                .addContainerGap(113, Short.MAX_VALUE)
                .addComponent(historyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(96, 96, 96))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jLayeredPane5Layout.setVerticalGroup(
            jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(historyLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tabbedPane.addTab("History", jLayeredPane5);

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLayout.createSequentialGroup()
                .addComponent(tabbedPane)
                .addContainerGap())
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 395, Short.MAX_VALUE)
        );

        menu.setText("Menu");
        menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuActionPerformed(evt);
            }
        });

        aboutMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        aboutMenuItem.setText("About");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        menu.add(aboutMenuItem);

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_DOWN_MASK));
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        menu.add(exitMenuItem);

        jMenuBar2.add(menu);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>                        

    /**
     * Button action clearing input text field
     * 
     * @param evt Action event 
     */
    private void clearInputTextButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                     
        inputFieldTextToBraille.setText("");
    }                                                    

    /**
     * Button action method converting input text to Braille notation,
     * displaying it in output text field and adding to the history.
     * Displaying error message in case of empty input string
     * 
     * @param evt Action event 
     */
    private void convertTextToBrailleButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                           

        DefaultTableModel model = (DefaultTableModel) historyTable.getModel();

        TextToBrailleModel textToBrailleModel = new TextToBrailleModel();
        View view = new View();
        String inputText = inputFieldTextToBraille.getText();
        if (inputText.isBlank()) {
            model.addRow(new Object[]{"Text to Braille", "-", "-"});
            JOptionPane.showMessageDialog(rootPane, "Empty input text!",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }

        try {
            String o = view.returnOutputStringBraille(textToBrailleModel.convertToBraille(inputText));
            outputFieldTexToBraille.setText(o);
            model.addRow(new Object[]{"Text to Braille", inputText, o});
        } catch (InvalidInputException m) {
            view.printEx(m.getMessage());
        }

    }                                                                                                             

    /**
     * Default Action event method for input text field in Braille to text conversion
     * 
     * @param evt Action event 
     */
    private void inputFieldBrailleToTextActionPerformed(java.awt.event.ActionEvent evt) {                                                      
    }         
    
     /**
     * Default Action event method for output text field in text to Braille conversion
     * 
     * @param evt Action event 
     */
    private void outputFieldTexToBrailleActionPerformed(java.awt.event.ActionEvent evt) {                                                      
    }                      
    
      /**
     * Default Action event method for output text field in Braille to text conversion
     * 
     * @param evt Action event 
     */
    private void outputFieldBrailleToTextActionPerformed(java.awt.event.ActionEvent evt) {                                                      
    }   
    
     /**
     * Default Action event method for input text field in text to Braille conversion
     * 
     * @param evt Action event 
     */
    private void inputFieldTextToBrailleActionPerformed(java.awt.event.ActionEvent evt) {                                                      
    }
    
     /**
     * Default Action event method for program menu
     * 
     * @param evt Action event 
     */
    private void menuActionPerformed(java.awt.event.ActionEvent evt) {                                                      
    }     
    
    
    /**
     * Button action method clearing content of output text field
     * 
     * @param evt Action event 
     */
    private void clearOutputTextButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                      
        outputFieldTexToBraille.setText("");
    }                                                     

    /**
     * Button action method exiting the program
     * 
     * @param evt Action event 
     */
    private void ExitButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        System.exit(0);
    }                                           

     /**
     * Button action method clearing content of output text field
     * 
     * @param evt Action event 
     */
    private void clearOutputTextButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                                       
        outputFieldBrailleToText.setText("");
    }                                                      

    /**
     * Clearing content of input text field 
     * 
     * @param evt Action event 
     */
    private void clearInputTextButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                                      
        inputFieldBrailleToText.setText("");
    }                                                                                                             

    /**
     * Button action method converting input text in Braille notation to plain text.
     * Result is displayed in output text field and whole operation is saved in the history.
     * Method displays error message in case of empty input text.
     * 
     * @param evt Action event 
     */
    private void convertBrailleToTextButtonActionPerformed(java.awt.event.ActionEvent evt) {                                                           
        DefaultTableModel model = (DefaultTableModel) historyTable.getModel();

        TextToBrailleModel textToBrailleModel = new TextToBrailleModel();
        View view = new View();
        BrailleToTextModel brailleToTextModel = new BrailleToTextModel();
        String inputText = inputFieldBrailleToText.getText();

        if (inputText.isBlank()) {
            model.addRow(new Object[]{"Braille to Text", "-", "-"});
            JOptionPane.showMessageDialog(rootPane, "Empty input string!",
                    "Input error", JOptionPane.ERROR_MESSAGE);
        }

        try {
            String o = view.returnOutputCharacterList(brailleToTextModel.convertToText(inputText, textToBrailleModel.getMap()));
            outputFieldBrailleToText.setText(o);
            model.addRow(new Object[]{"Braille to Text", inputText, o});

        } catch (InvalidInputException m) {
            view.printEx(m.getMessage());
        }

    }                                                                                            

     /**
     * Action event method on exit Menu item. This method quits program.
     * 
     * @param evt Action event 
     */
    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {                                             
        int choice = JOptionPane.YES_OPTION;
        choice = JOptionPane.showConfirmDialog(rootPane, "Are you sure?",
                "Exit", JOptionPane.YES_NO_OPTION);
        if (choice == JOptionPane.YES_OPTION) {
            System.exit(0);
        }

    }                                            

     /**
     * Action event method on About Menu item. This method displays information about program name and its author.
     * 
     * @param evt Action event 
     */
    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {                                              

        JOptionPane.showMessageDialog(rootPane, "Braille Converter\n" + "Author: Pawel Szafraniec\n",
                 "About", JOptionPane.INFORMATION_MESSAGE);
    }                                             



    /** Table presenting Braille alphabet in numeric notation  */                 
    private javax.swing.JTable BrailleToNumbersTable;
    
    /** Exit button */
    private javax.swing.JButton ExitButton1;
    
    /** Menu option - About */
    private javax.swing.JMenuItem aboutMenuItem;
    
    /** Button clearing input text field in text to Braille conversion */
    private javax.swing.JButton clearInputTextButton;
    
    /** Button clearing input text field in Braille to text conversion */
    private javax.swing.JButton clearInputTextButton1;
    
    /** Button clearing output text field in text to Braille conversion */
    private javax.swing.JButton clearOutputTextButton;
    
    /** Button clearing output text field in Braille to text conversion */
    private javax.swing.JButton clearOutputTextButton2;
    
    /** 1:  Label describing Braille to text conversion pane  */
    private javax.swing.JLabel convertBrailleToText1;
    
    /** 2:  Label describing Braille to text conversion pane  */
    private javax.swing.JLabel convertBrailleToText2;
    
    /** 3:  Label describing Braille to text conversion pane  */
    private javax.swing.JLabel convertBrailleToText3;
    
    /** 4:  Label describing Braille to text conversion pane  */
    private javax.swing.JLabel convertBrailleToText4;
    
    /** Button performing conversion from Braille to text  */
    private javax.swing.JButton convertBrailleToTextButton;
    
    /** Button performing conversion from text to Braille  */
    private javax.swing.JButton convertTextToBrailleButton;
    
    /**  Label describing Text to Braille conversion Pane  */
    private javax.swing.JLabel convertTextToBrailleLabel;
    
    /** Menu option - exit  */
    private javax.swing.JMenuItem exitMenuItem;
    
    /** Label describing table storing history of performed operations  */
    private javax.swing.JLabel historyLabel;
    
    /** Table storing history of performed operations  */
    private javax.swing.JTable historyTable;
    
    /** Label describing input text field in Braille to text conversion  */
    private javax.swing.JLabel inputBrailleToText;
    
    /** Input text field in Braille to text conversion  */
    private javax.swing.JTextField inputFieldBrailleToText;
    
    /** Input text field in text to Braille conversion  */
    private javax.swing.JTextField inputFieldTextToBraille;
    
    /** Label describing input text field in text to Braille conversion  */
    private javax.swing.JLabel inputTextToBraille;
    
    /** Layered pane  */
    private javax.swing.JLayeredPane jLayeredPane1;
    
    /** Layered pane  */
    private javax.swing.JLayeredPane jLayeredPane2;
    
    /** Layered pane  */
    private javax.swing.JLayeredPane jLayeredPane3;
    
    /** Layered pane  */
    private javax.swing.JLayeredPane jLayeredPane4;
    
    /** Layered pane  */
    private javax.swing.JLayeredPane jLayeredPane5;
    
    /** Bar of the menu */
    private javax.swing.JMenuBar jMenuBar2;
    
    /**  Panel of the GUI */
    private javax.swing.JPanel jPanel;
    
    /** Scroll pane */
    private javax.swing.JScrollPane jScrollPane1;
    
    /** Scroll pane  */
    private javax.swing.JScrollPane jScrollPane2;
    
    /** Program menu */
    private javax.swing.JMenu menu;
    
    /** Label describing output text field in Braille to text conversion  */
    private javax.swing.JLabel outputBraileToText;
    
    /** Output text field in Braille to text conversion */
    private javax.swing.JTextField outputFieldBrailleToText;
    
    /** Output text field in text to Braille conversion  */
    private javax.swing.JTextField outputFieldTexToBraille;
    
    /** Label describing output text field in Text to Braille conversion */
    private javax.swing.JLabel outputTextToBraille;
    
    /** Tabbed pane */
    private javax.swing.JTabbedPane tabbedPane;
    
    // End of variables declaration                   
}
